{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aravind\\\\Documents\\\\myfirstreact\\\\src\\\\components\\\\Loginform.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nexport default class Loginform extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      Password: \"\"\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleusernameChange = this.handleusernameChange.bind(this);\n    this.handlepasswordChange = this.handlepasswordChange.bind(this);\n    this.allLetter = this.allLetter.bind(this);\n  }\n\n  allLetter(inputtxt) {\n    var letters = /^[A-Za-z]+$/;\n\n    if (inputtxt.match(letters)) {\n      alert('Your name have accepted : you can try another');\n\n      const handleLogin = e => {\n        e.preventDefault();\n      };\n\n      return true;\n    } else {\n      alert('Please input alphabet characters only');\n\n      const handleLogin = e => {\n        e.preventDefault();\n      };\n\n      return false;\n    }\n  }\n\n  getLength(input1) {\n    if (input1.length < 6) {\n      alert(\"minimum 6 characters required\");\n      return false;\n    } else {\n      alert(\"Input ok\");\n      return true;\n    }\n  }\n\n  reset() {\n    this.setState({\n      username: \"\",\n      Password: \"\"\n    });\n  }\n\n  handleusernameChange(e) {\n    this.setState({\n      username: e.target.value\n    });\n    console.log(this.state.username);\n  }\n\n  handlepasswordChange(e) {\n    this.setState({\n      Password: e.target.value\n    });\n  }\n\n  handleLogin() {\n    console.log(\"Login \" + this.state.username);\n    let username = this.state.username;\n    this.allLetter(username);\n    this.getLength(username);\n    console.log(\"Login \" + this.state.Password);\n    let Password = this.state.Password;\n    this.allLetter(Password);\n    this.getLength(Password);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Login page Validation\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"enter Name\",\n      value: this.state.username,\n      onChange: this.handleusernameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"Password\",\n      name: \"Password\",\n      placeholder: \"Password\",\n      value: this.state.Password,\n      onChange: this.handlepasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/welcome\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Login\"), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      value: \"reset\",\n      onClick: () => {\n        this.reset();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 20\n      }\n    }, \"reset\")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Aravind/Documents/myfirstreact/src/components/Loginform.js"],"names":["React","Component","BrowserRouter","Router","Link","Loginform","constructor","state","username","Password","handleLogin","bind","handleusernameChange","handlepasswordChange","allLetter","inputtxt","letters","match","alert","e","preventDefault","getLength","input1","length","reset","setState","target","value","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nexport default class Loginform extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username:\"\",\r\n            Password:\"\"\r\n        \r\n        }\r\n        this.handleLogin=this.handleLogin.bind(this)\r\n        this.handleusernameChange=this.handleusernameChange.bind(this)\r\n        this.handlepasswordChange=this.handlepasswordChange.bind(this)\r\n        this.allLetter=this.allLetter.bind(this)\r\n    }\r\n\r\n    allLetter(inputtxt)\r\n    { \r\n    var letters = /^[A-Za-z]+$/;\r\n    if(inputtxt.match(letters))\r\n    {\r\n    alert('Your name have accepted : you can try another');\r\n    const handleLogin = (e) =>{  \r\n        e.preventDefault()\r\n    }\r\n    return true;\r\n    }\r\n    else\r\n    {\r\n    alert('Please input alphabet characters only');\r\n    const handleLogin = (e) =>{  \r\n        e.preventDefault()\r\n    }\r\n    return false;\r\n    }\r\n    }\r\n    \r\n    getLength(input1){\r\n        if(input1.length<6){\r\n            alert(\"minimum 6 characters required\")\r\n            return false;\r\n            \r\n        }\r\n        else{\r\n            alert(\"Input ok\")\r\n            return true;\r\n        }\r\n    }\r\nreset(){\r\n    this.setState({username:\"\",Password:\"\"})\r\n}\r\nhandleusernameChange(e) {\r\n     this.setState({username: e.target.value}); \r\n     console.log(this.state.username)\r\n    }\r\nhandlepasswordChange(e) \r\n{\r\n     this.setState({Password: e.target.value});\r\n     }\r\nhandleLogin() \r\n{console.log( \"Login \" +this.state.username)\r\n    let username = this.state.username \r\n    this.allLetter(username)\r\n    this.getLength(username)\r\n    \r\n\r\nconsole.log( \"Login \"+this.state.Password)\r\nlet  Password = this.state.Password\r\nthis.allLetter(Password)\r\nthis.getLength(Password)\r\n}\r\n\r\n\r\n    render  (){\r\n        return (\r\n            <form>\r\n            <div>\r\n                <h1>Login page Validation</h1>\r\n                <input type =\"text\" name =\"username\" placeholder=\"enter Name\" value={this.state.username}\r\n                    onChange={ this.handleusernameChange}  />\r\n\r\n                    <input type=\"Password\" name=\"Password\" placeholder=\"Password\" value={this.state.Password} \r\n                    onChange={this.handlepasswordChange} /> \r\n                \r\n              \r\n               <Link to =\"/welcome\">\r\n                <button type=\"button\" onClick={this.handleLogin}>Login</button> </Link>\r\n                \r\n                   <button value=\"reset\"  onClick={()=>{this.reset()}} >reset</button>\r\n                   </div>\r\n                   </form> \r\n        );\r\n\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}